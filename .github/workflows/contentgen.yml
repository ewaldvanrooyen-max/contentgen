name: contentgen

on:
  workflow_dispatch:
    inputs:
      max:
        description: "Max number of posts to generate"
        required: false
        default: "2"
  schedule:
    # M/W/F at 06:20 UTC
    - cron: "20 6 * * 1,3,5"

permissions:
  contents: write

concurrency:
  group: contentgen-${{ github.ref }}
  cancel-in-progress: false

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      # ðŸ‘‡ NEW: define BRANCH for later push/rebase
      - name: Set branch env
        run: |
          echo "BRANCH=${GITHUB_REF_NAME:-main}" >> "$GITHUB_ENV"
          echo "Using branch: ${GITHUB_REF_NAME:-main}"

      - name: Generate content
        run: |
          set -euo pipefail
          MAX="${{ github.event.inputs.max }}"
          if [ -z "${MAX:-}" ]; then MAX=2; fi

          ROOT="$GITHUB_WORKSPACE"
          echo "APPLY: generating up to $MAX post(s)"
          node scripts/contentgen.mjs \
            --max "$MAX" \
            --out "$ROOT/content" \
            --config "$ROOT/contentgen/config.yaml" \
            --topics "$ROOT/contentgen/topics.yaml"

      - name: Commit changes (skip if none)
        run: |
          set -euo pipefail
          git config user.name  "contentgen-bot"
          git config user.email "actions@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet ; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "content: auto-generate posts"

      - name: Push with rebase (handles non-fast-forward)
        run: |
          set -euo pipefail
          # Retry up to 3 times to smooth over races with other pushes
          for i in 1 2 3; do
            if git push -u origin "$BRANCH" ; then
              echo "Push success."
              exit 0
            fi
            echo "Push rejected (non-fast-forward). Rebasing onto remote and retrying... ($i/3)"
            # Keep local changes and rebase on remote tip
            git fetch origin "$BRANCH"
            git rebase --autostash "origin/$BRANCH" || git pull --rebase --autostash origin "$BRANCH" || true
          done
          echo "Push failed after 3 attempts."
          exit 1
