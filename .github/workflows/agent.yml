name: contentgen

on:
  # Run every weekday at 06:00 UTC (change as you like)
  schedule:
    - cron: "0 6 * * 1-5"
  # Manual run button with a couple of knobs
  workflow_dispatch:
    inputs:
      max:
        description: "Max posts to generate"
        required: false
        default: "3"
      dry_run:
        description: "Dry run (no files written)"
        required: false
        default: "false"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: contentgen
  cancel-in-progress: false

env:
  NODE_VERSION: "20"
  BRANCH: "main"
  # Must exist in repo/organization secrets
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install deps
        run: npm ci || npm i

      - name: Sanity
        run: |
          node -v
          echo "Running on branch: $BRANCH"

      - name: Generate content
        env:
          MAX: ${{ github.event.inputs.max || '3' }}
          DRY: ${{ github.event.inputs.dry_run || 'false' }}
        run: |
          set -euo pipefail
          if [ "$DRY" = "true" ]; then
            echo "DRY RUN: generating up to $MAX post(s)"
            node scripts/contentgen.mjs --dry --max "$MAX"
          else
            echo "APPLY: generating up to $MAX post(s)"
            node scripts/contentgen.mjs --apply --max "$MAX"
          fi

      - name: Abort if conflict markers were produced
        run: |
          if git grep -n -E '^[<=>]{7}($| .*)' -- ':!node_modules' ; then
            echo "Conflict markers found. Fix them before committing."
            exit 1
          else
            echo "No conflict markers detected."
          fi

      - name: Commit changes (if any)
        run: |
          set -euo pipefail
          git config user.name "contentgen-bot"
          git config user.email "actions@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet ; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "content: auto-generate posts"

      - name: Push with rebase (handles non-fast-forward)
        run: |
          set -euo pipefail
          for i in 1 2 3; do
            if git push -u origin "$BRANCH" ; then
              echo "Push success."
              exit 0
            fi
            echo "Push rejected (non-fast-forward). Rebasing onto remote and retrying..."
            git pull --rebase --autostash origin "$BRANCH" || true
          done
          echo "Push failed after 3 attempts."
          exit 1
